//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DL
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class LJLeenkedGroupEntities : DbContext
    {
        public LJLeenkedGroupEntities()
            : base("name=LJLeenkedGroupEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<CatEntidadFederativa> CatEntidadFederativas { get; set; }
        public virtual DbSet<Empleado> Empleadoes { get; set; }
    
        public virtual int AddEmpleado(string nombreNomina, string nombre, string apellidoPaterno, string apellidoMaterno, Nullable<int> idEstado)
        {
            var nombreNominaParameter = nombreNomina != null ?
                new ObjectParameter("NombreNomina", nombreNomina) :
                new ObjectParameter("NombreNomina", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var apellidoPaternoParameter = apellidoPaterno != null ?
                new ObjectParameter("ApellidoPaterno", apellidoPaterno) :
                new ObjectParameter("ApellidoPaterno", typeof(string));
    
            var apellidoMaternoParameter = apellidoMaterno != null ?
                new ObjectParameter("ApellidoMaterno", apellidoMaterno) :
                new ObjectParameter("ApellidoMaterno", typeof(string));
    
            var idEstadoParameter = idEstado.HasValue ?
                new ObjectParameter("IdEstado", idEstado) :
                new ObjectParameter("IdEstado", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddEmpleado", nombreNominaParameter, nombreParameter, apellidoPaternoParameter, apellidoMaternoParameter, idEstadoParameter);
        }
    
        public virtual int DellEmpleado(Nullable<int> idEmpleado)
        {
            var idEmpleadoParameter = idEmpleado.HasValue ?
                new ObjectParameter("IdEmpleado", idEmpleado) :
                new ObjectParameter("IdEmpleado", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DellEmpleado", idEmpleadoParameter);
        }
    
        public virtual ObjectResult<GetAllEmpleado_Result> GetAllEmpleado()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllEmpleado_Result>("GetAllEmpleado");
        }
    
        public virtual ObjectResult<GetAllEstado_Result> GetAllEstado()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllEstado_Result>("GetAllEstado");
        }
    
        public virtual ObjectResult<GetByIdEmpleado_Result> GetByIdEmpleado(Nullable<int> idEmpleado)
        {
            var idEmpleadoParameter = idEmpleado.HasValue ?
                new ObjectParameter("IdEmpleado", idEmpleado) :
                new ObjectParameter("IdEmpleado", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetByIdEmpleado_Result>("GetByIdEmpleado", idEmpleadoParameter);
        }
    
        public virtual int updateEmpleado(Nullable<int> idEmpleado, string nombreNomina, string nombre, string apellidoPaterno, string apellidoMaterno, Nullable<int> idEstado)
        {
            var idEmpleadoParameter = idEmpleado.HasValue ?
                new ObjectParameter("IdEmpleado", idEmpleado) :
                new ObjectParameter("IdEmpleado", typeof(int));
    
            var nombreNominaParameter = nombreNomina != null ?
                new ObjectParameter("NombreNomina", nombreNomina) :
                new ObjectParameter("NombreNomina", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var apellidoPaternoParameter = apellidoPaterno != null ?
                new ObjectParameter("ApellidoPaterno", apellidoPaterno) :
                new ObjectParameter("ApellidoPaterno", typeof(string));
    
            var apellidoMaternoParameter = apellidoMaterno != null ?
                new ObjectParameter("ApellidoMaterno", apellidoMaterno) :
                new ObjectParameter("ApellidoMaterno", typeof(string));
    
            var idEstadoParameter = idEstado.HasValue ?
                new ObjectParameter("IdEstado", idEstado) :
                new ObjectParameter("IdEstado", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("updateEmpleado", idEmpleadoParameter, nombreNominaParameter, nombreParameter, apellidoPaternoParameter, apellidoMaternoParameter, idEstadoParameter);
        }
    }
}
